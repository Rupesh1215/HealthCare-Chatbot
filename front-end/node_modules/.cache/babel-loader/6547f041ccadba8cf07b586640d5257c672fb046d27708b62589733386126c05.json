{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohan\\\\OneDrive\\\\Desktop\\\\Chatbot\\\\front-end\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useSpeechRecognitionHook } from '../hooks/useSpeechRecognition';\nimport { speechSynthesizer } from '../utils/speechSynthesis';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  user\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [currentlySpeakingId, setCurrentlySpeakingId] = useState(null);\n  const [showLanguageMenu, setShowLanguageMenu] = useState(false);\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const messagesEndRef = useRef(null);\n  const socketRef = useRef();\n  const videoRef = useRef(null);\n  const {\n    transcript,\n    isListening,\n    startListening,\n    stopListening,\n    supportedLanguages,\n    selectedLanguage,\n    setSelectedLanguage,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognitionHook(handleSpeechResult);\n\n  // Enhanced text cleaning function for speech\n  const cleanTextForSpeech = text => {\n    if (typeof text !== 'string') return String(text);\n    console.log('Original text for speech:', text);\n\n    // Remove all formatting but preserve the actual content\n    let cleanedText = text\n    // Remove markdown formatting but keep text\n    .replace(/\\*\\*(.*?)\\*\\*/g, '$1').replace(/\\*(.*?)\\*/g, '$1').replace(/`(.*?)`/g, '$1').replace(/#/g, '').replace(/\\*/g, '').replace(/~/g, '').replace(/_/g, ' ')\n\n    // Remove bullet points and numbering, replace with pauses\n    .replace(/\\n\\s*[-*•]\\s*/g, '. ').replace(/\\n\\s*\\d+\\.\\s*/g, '. ')\n\n    // Clean up punctuation for natural speech\n    .replace(/\\s*\\.\\s*\\.\\s*\\./g, '. ').replace(/\\s*,\\s*/g, ' ').replace(/\\s*;\\s*/g, '. ').replace(/\\s*:\\s*/g, ' ').replace(/\\s*!\\s*/g, '. ').replace(/\\s*\\?\\s*/g, '. ')\n\n    // Remove other special characters\n    .replace(/[\\[\\](){}]/g, ' ').replace(/[\"']/g, ' ').replace(/[@#$%&+=<>\\/\\\\\\|]/g, ' ')\n\n    // Handle multiple newlines and spaces\n    .replace(/\\n+/g, '. ').replace(/\\s+/g, ' ').trim();\n\n    // Add natural pauses for better speech flow\n    cleanedText = cleanedText.replace(/\\.\\s+/g, '. ').replace(/\\s{2,}/g, ' ');\n\n    // Ensure the text ends with a period if it doesn't have proper punctuation\n    if (cleanedText.length > 0 && !/[.!?]$/.test(cleanedText)) {\n      cleanedText += '.';\n    }\n    console.log('Cleaned text for speech:', cleanedText);\n    return cleanedText;\n  };\n\n  // Initialize speech synthesis and video background\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        // Initialize speech synthesis\n        await speechSynthesizer.init();\n        console.log('Speech synthesis initialized successfully');\n\n        // Setup video background\n        if (videoRef.current) {\n          videoRef.current.playbackRate = 0.8;\n          videoRef.current.loop = true;\n          videoRef.current.muted = true;\n          videoRef.current.addEventListener('loadeddata', () => {\n            setIsVideoLoaded(true);\n          });\n          try {\n            await videoRef.current.play();\n          } catch (error) {\n            console.log('Video autoplay prevented:', error);\n          }\n        }\n      } catch (error) {\n        console.error('Initialization error:', error);\n      }\n    };\n    initializeApp();\n    return () => {\n      stopSpeaking();\n      stopListening();\n    };\n  }, []);\n  function handleSpeechResult(text, language) {\n    if (text.trim().length > 0) {\n      setInputMessage(text);\n      // Auto-send the speech result after a short delay\n      setTimeout(() => {\n        handleSendMessage(null, text);\n      }, 500);\n    }\n  }\n  const handleMicClick = () => {\n    if (isListening) {\n      stopListening();\n    } else {\n      startListening(selectedLanguage);\n    }\n  };\n  const handleLanguageSelect = languageCode => {\n    setSelectedLanguage(languageCode);\n    setShowLanguageMenu(false);\n    if (isListening) {\n      stopListening();\n      setTimeout(() => {\n        startListening(languageCode);\n      }, 300);\n    }\n  };\n  const speakMessage = async (text, messageId = null) => {\n    if (!text || isSpeaking) {\n      console.log('Cannot speak: no text or already speaking');\n      return;\n    }\n    console.log('Attempting to speak message in language:', selectedLanguage);\n    console.log('Message content:', text.substring(0, 100) + '...');\n\n    // Check if speech synthesis is supported\n    if (!speechSynthesizer.isSupported()) {\n      console.error('Speech synthesis not supported');\n      alert('Text-to-speech is not supported in your browser. Please try Chrome or Edge.');\n      return;\n    }\n    try {\n      setCurrentlySpeakingId(messageId);\n      setIsSpeaking(true);\n\n      // Ensure speech synthesis is initialized\n      if (!speechSynthesizer.isInitialized) {\n        await speechSynthesizer.init();\n      }\n\n      // Clean the text before speaking\n      const cleanedText = cleanTextForSpeech(text);\n      if (!cleanedText || cleanedText.trim().length === 0) {\n        console.log('No text to speak after cleaning');\n        return;\n      }\n      await speechSynthesizer.speak(cleanedText, selectedLanguage);\n      console.log('Speech completed successfully');\n    } catch (error) {\n      console.error('Speech synthesis error:', error);\n\n      // Fallback: Try with English if the selected language fails\n      if (selectedLanguage !== 'en-US') {\n        console.log('Trying fallback to English...');\n        try {\n          const cleanedText = cleanTextForSpeech(text);\n          await speechSynthesizer.speak(cleanedText, 'en-US');\n        } catch (fallbackError) {\n          console.error('Fallback speech also failed:', fallbackError);\n          alert('Unable to read the message aloud. Your browser may not support speech synthesis for this language.');\n        }\n      } else {\n        alert('Unable to read the message aloud. Please check your browser settings.');\n      }\n    } finally {\n      setIsSpeaking(false);\n      setCurrentlySpeakingId(null);\n    }\n  };\n  const stopSpeaking = () => {\n    console.log('Stopping speech synthesis');\n    speechSynthesizer.stop();\n    setIsSpeaking(false);\n    setCurrentlySpeakingId(null);\n  };\n  const renderSafeContent = content => {\n    if (typeof content === 'string') return content;\n    if (typeof content === 'number') return content.toString();\n    if (typeof content === 'object' && content !== null) {\n      try {\n        return JSON.stringify(content);\n      } catch (e) {\n        return String(content);\n      }\n    }\n    return String(content);\n  };\n  const formatMessageWithLineBreaks = text => {\n    if (typeof text !== 'string') return text;\n    const lines = text.split('\\n');\n    return lines.map((line, index) => {\n      if (line.trim() === '') {\n        return /*#__PURE__*/_jsxDEV(\"br\", {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 16\n        }, this);\n      }\n      const parts = line.split(/\\*\\*(.*?)\\*\\*/g);\n      const formattedLine = parts.map((part, i) => {\n        if (i % 2 === 1) {\n          return /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: part\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 18\n          }, this);\n        }\n        return part;\n      });\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [formattedLine, index < lines.length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 40\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  useEffect(() => {\n    // Initialize socket connection\n    socketRef.current = io('http://localhost:5000', {\n      auth: {\n        token: localStorage.getItem('token')\n      }\n    });\n    socketRef.current.on('connect', () => {\n      console.log('Connected to server');\n      setConnectionStatus('connected');\n    });\n    socketRef.current.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnectionStatus('disconnected');\n    });\n    socketRef.current.on('chat_message', data => {\n      setIsTyping(false);\n      const newMessage = {\n        id: Date.now(),\n        text: renderSafeContent(data.message),\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, newMessage]);\n    });\n    socketRef.current.on('bot_typing', () => {\n      setIsTyping(true);\n    });\n    socketRef.current.on('error', error => {\n      console.error('Socket error:', error);\n      setIsTyping(false);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: \"Sorry, I'm having trouble connecting. Please try again.\",\n        sender: 'bot',\n        timestamp: new Date()\n      }]);\n    });\n\n    // Fetch chat history\n    fetchChatHistory();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      stopSpeaking();\n      stopListening();\n    };\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const fetchChatHistory = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/chat/history', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const history = await response.json();\n        const formattedHistory = history.map(chat => ({\n          id: chat.chat_id || Date.now(),\n          text: renderSafeContent(chat.query),\n          sender: 'user',\n          timestamp: new Date(chat.timestamp),\n          response: renderSafeContent(chat.response)\n        }));\n\n        // Add both user queries and bot responses to messages\n        const allMessages = [];\n        formattedHistory.forEach(chat => {\n          allMessages.push({\n            id: chat.id + '_user',\n            text: chat.text,\n            sender: 'user',\n            timestamp: chat.timestamp\n          });\n          allMessages.push({\n            id: chat.id + '_bot',\n            text: chat.response,\n            sender: 'bot',\n            timestamp: new Date(chat.timestamp.getTime() + 1000)\n          });\n        });\n        setMessages(allMessages.sort((a, b) => a.timestamp - b.timestamp));\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const handleSendMessage = (e, speechText = null) => {\n    if (e) e.preventDefault();\n    const messageText = speechText || inputMessage;\n    if (messageText.trim() === '') return;\n    const newMessage = {\n      id: Date.now(),\n      text: messageText,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInputMessage('');\n    setIsTyping(true);\n    if (socketRef.current) {\n      socketRef.current.emit('user_message', {\n        message: messageText,\n        userId: user === null || user === void 0 ? void 0 : user.id,\n        language: selectedLanguage\n      });\n    }\n  };\n  const getLanguageName = code => {\n    const lang = supportedLanguages.find(l => l.code === code);\n    return lang ? lang.nativeName : code;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"background-video\",\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        onLoadedData: () => setIsVideoLoaded(true),\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: \"/videos/medical-background.mp4\",\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n          src: \"/videos/medical-background.webm\",\n          type: \"video/webm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), !isVideoLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse-animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rotating-plus\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Health Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"welcome-text\",\n            children: \"Welcome,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: (user === null || user === void 0 ? void 0 : user.name) || 'User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-dot ${connectionStatus}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: connectionStatus === 'connected' ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"language-btn\",\n            onClick: () => setShowLanguageMenu(!showLanguageMenu),\n            title: \"Select Language\",\n            \"aria-expanded\": showLanguageMenu,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"language-icon\",\n              children: \"\\uD83C\\uDF10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"language-text\",\n              children: getLanguageName(selectedLanguage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dropdown-arrow\",\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), showLanguageMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"language-menu-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Select Language\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-menu-btn\",\n                onClick: () => setShowLanguageMenu(false),\n                \"aria-label\": \"Close language menu\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"language-options-list\",\n              children: supportedLanguages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `language-option ${selectedLanguage === language.code ? 'selected' : ''}`,\n                onClick: () => handleLanguageSelect(language.code),\n                \"aria-selected\": selectedLanguage === language.code,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-flag\",\n                  children: language.nativeName.includes('हिन्दी') ? '🇮🇳' : language.nativeName.includes('తెలుగు') ? '🇮🇳' : language.nativeName.includes('தமிழ்') ? '🇮🇳' : '🌐'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"native-name\",\n                    children: language.nativeName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"english-name\",\n                    children: language.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 23\n                }, this), selectedLanguage === language.code && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkmark\",\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this)]\n              }, language.code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Start Your Health Consultation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Describe your symptoms or ask any health-related questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-features\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Voice input supported\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83C\\uDF10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Multiple languages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u2695\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Professional medical advice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: message.sender === 'user' ? '👤' : '⚕️'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: formatMessageWithLineBreaks(renderSafeContent(message.text))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: new Date(message.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this), message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `speaker-btn ${currentlySpeakingId === message.id ? 'speaking' : ''}`,\n              onClick: () => {\n                if (currentlySpeakingId === message.id && isSpeaking) {\n                  stopSpeaking();\n                } else {\n                  speakMessage(message.text, message.id);\n                }\n              },\n              title: currentlySpeakingId === message.id ? 'Stop reading' : 'Read aloud',\n              \"aria-label\": currentlySpeakingId === message.id ? 'Stop reading' : 'Read aloud',\n              disabled: isSpeaking && currentlySpeakingId !== message.id,\n              children: currentlySpeakingId === message.id && isSpeaking ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 15\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 13\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot-message typing-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: \"\\u2695\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Dr. CareBot is typing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-dots\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input-form\",\n        onSubmit: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              placeholder: `Describe your symptoms or ask a question... (${getLanguageName(selectedLanguage)})`,\n              disabled: isTyping,\n              className: \"message-input\",\n              \"aria-label\": \"Message input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-actions\",\n              children: [browserSupportsSpeechRecognition && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `action-btn mic-btn ${isListening ? 'listening' : ''}`,\n                onClick: handleMicClick,\n                disabled: isTyping,\n                title: isListening ? 'Stop listening' : 'Start voice input',\n                \"aria-label\": isListening ? 'Stop listening' : 'Start voice input',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-icon\",\n                  children: isListening ? '⏹️' : '🎤'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-tooltip\",\n                  children: isListening ? 'Stop Listening' : 'Voice Input'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `action-btn speaker-btn ${isSpeaking ? 'speaking' : ''}`,\n                onClick: stopSpeaking,\n                disabled: !isSpeaking,\n                title: isSpeaking ? 'Stop all speech' : 'No speech active',\n                \"aria-label\": isSpeaking ? 'Stop all speech' : 'No speech active',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-icon\",\n                  children: \"\\uD83D\\uDD07\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"btn-tooltip\",\n                  children: isSpeaking ? 'Stop All Speech' : 'No Speech'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isTyping || inputMessage.trim() === '',\n            className: \"send-button\",\n            \"aria-label\": \"Send message\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"send-icon\",\n              children: \"\\u27A4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"send-text\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speech-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse-ring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speech-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"listening-text\",\n            children: [\"Listening in \", getLanguageName(selectedLanguage), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transcript\",\n            children: transcript\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stop-listening-btn\",\n          onClick: stopListening,\n          title: \"Stop listening\",\n          \"aria-label\": \"Stop listening\",\n          children: \"\\u23F9\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this), isSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stop-speech-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stop-speech-btn\",\n        onClick: stopSpeaking,\n        title: \"Stop all speech\",\n        \"aria-label\": \"Stop all speech\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stop-icon\",\n          children: \"\\u23F9\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stop-text\",\n          children: \"Stop All Voice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 9\n    }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '10px',\n        left: '10px',\n        background: 'rgba(0,0,0,0.8)',\n        color: 'white',\n        padding: '10px',\n        fontSize: '12px',\n        zIndex: 10000,\n        maxWidth: '300px',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Debug Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Speech Supported: \", speechSynthesizer.isSupported() ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Speech Initialized: \", speechSynthesizer.isInitialized ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Currently Speaking: \", isSpeaking ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Selected Language: \", selectedLanguage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Available Voices: \", speechSynthesizer.getAvailableVoices().length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"1IaqdEZ1thlVy1ztAdz5boInQfM=\", false, function () {\n  return [useSpeechRecognitionHook];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","useSpeechRecognitionHook","speechSynthesizer","jsxDEV","_jsxDEV","ChatInterface","user","_s","messages","setMessages","inputMessage","setInputMessage","isTyping","setIsTyping","connectionStatus","setConnectionStatus","isSpeaking","setIsSpeaking","currentlySpeakingId","setCurrentlySpeakingId","showLanguageMenu","setShowLanguageMenu","isVideoLoaded","setIsVideoLoaded","messagesEndRef","socketRef","videoRef","transcript","isListening","startListening","stopListening","supportedLanguages","selectedLanguage","setSelectedLanguage","browserSupportsSpeechRecognition","handleSpeechResult","cleanTextForSpeech","text","String","console","log","cleanedText","replace","trim","length","test","initializeApp","init","current","playbackRate","loop","muted","addEventListener","play","error","stopSpeaking","language","setTimeout","handleSendMessage","handleMicClick","handleLanguageSelect","languageCode","speakMessage","messageId","substring","isSupported","alert","isInitialized","speak","fallbackError","stop","renderSafeContent","content","toString","JSON","stringify","e","formatMessageWithLineBreaks","lines","split","map","line","index","fileName","_jsxFileName","lineNumber","columnNumber","parts","formattedLine","part","i","children","Fragment","auth","token","localStorage","getItem","on","data","newMessage","id","Date","now","message","sender","timestamp","prev","fetchChatHistory","disconnect","scrollToBottom","response","fetch","headers","ok","history","json","formattedHistory","chat","chat_id","query","allMessages","forEach","push","getTime","sort","a","b","_messagesEndRef$curre","scrollIntoView","behavior","speechText","preventDefault","messageText","emit","userId","getLanguageName","code","lang","find","l","nativeName","className","ref","autoPlay","playsInline","onLoadedData","src","type","name","onClick","title","includes","toLocaleTimeString","disabled","onSubmit","value","onChange","target","placeholder","process","env","NODE_ENV","style","position","bottom","left","background","color","padding","fontSize","zIndex","maxWidth","borderRadius","getAvailableVoices","_c","$RefreshReg$"],"sources":["C:/Users/mohan/OneDrive/Desktop/Chatbot/front-end/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useSpeechRecognitionHook } from '../hooks/useSpeechRecognition';\r\nimport { speechSynthesizer } from '../utils/speechSynthesis';\r\nimport './ChatInterface.css';\r\n\r\nconst ChatInterface = ({ user }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [currentlySpeakingId, setCurrentlySpeakingId] = useState(null);\r\n  const [showLanguageMenu, setShowLanguageMenu] = useState(false);\r\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const socketRef = useRef();\r\n  const videoRef = useRef(null);\r\n\r\n  const {\r\n    transcript,\r\n    isListening,\r\n    startListening,\r\n    stopListening,\r\n    supportedLanguages,\r\n    selectedLanguage,\r\n    setSelectedLanguage,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognitionHook(handleSpeechResult);\r\n\r\n  // Enhanced text cleaning function for speech\r\n  const cleanTextForSpeech = (text) => {\r\n    if (typeof text !== 'string') return String(text);\r\n    \r\n    console.log('Original text for speech:', text);\r\n    \r\n    // Remove all formatting but preserve the actual content\r\n    let cleanedText = text\r\n      // Remove markdown formatting but keep text\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '$1')\r\n      .replace(/\\*(.*?)\\*/g, '$1')\r\n      .replace(/`(.*?)`/g, '$1')\r\n      .replace(/#/g, '')\r\n      .replace(/\\*/g, '')\r\n      .replace(/~/g, '')\r\n      .replace(/_/g, ' ')\r\n      \r\n      // Remove bullet points and numbering, replace with pauses\r\n      .replace(/\\n\\s*[-*•]\\s*/g, '. ')\r\n      .replace(/\\n\\s*\\d+\\.\\s*/g, '. ')\r\n      \r\n      // Clean up punctuation for natural speech\r\n      .replace(/\\s*\\.\\s*\\.\\s*\\./g, '. ')\r\n      .replace(/\\s*,\\s*/g, ' ')\r\n      .replace(/\\s*;\\s*/g, '. ')\r\n      .replace(/\\s*:\\s*/g, ' ')\r\n      .replace(/\\s*!\\s*/g, '. ')\r\n      .replace(/\\s*\\?\\s*/g, '. ')\r\n      \r\n      // Remove other special characters\r\n      .replace(/[\\[\\](){}]/g, ' ')\r\n      .replace(/[\"']/g, ' ')\r\n      .replace(/[@#$%&+=<>\\/\\\\\\|]/g, ' ')\r\n      \r\n      // Handle multiple newlines and spaces\r\n      .replace(/\\n+/g, '. ')\r\n      .replace(/\\s+/g, ' ')\r\n      .trim();\r\n\r\n    // Add natural pauses for better speech flow\r\n    cleanedText = cleanedText\r\n      .replace(/\\.\\s+/g, '. ')\r\n      .replace(/\\s{2,}/g, ' ');\r\n\r\n    // Ensure the text ends with a period if it doesn't have proper punctuation\r\n    if (cleanedText.length > 0 && !/[.!?]$/.test(cleanedText)) {\r\n      cleanedText += '.';\r\n    }\r\n\r\n    console.log('Cleaned text for speech:', cleanedText);\r\n    return cleanedText;\r\n  };\r\n\r\n  // Initialize speech synthesis and video background\r\n  useEffect(() => {\r\n    const initializeApp = async () => {\r\n      try {\r\n        // Initialize speech synthesis\r\n        await speechSynthesizer.init();\r\n        console.log('Speech synthesis initialized successfully');\r\n        \r\n        // Setup video background\r\n        if (videoRef.current) {\r\n          videoRef.current.playbackRate = 0.8;\r\n          videoRef.current.loop = true;\r\n          videoRef.current.muted = true;\r\n          \r\n          videoRef.current.addEventListener('loadeddata', () => {\r\n            setIsVideoLoaded(true);\r\n          });\r\n          \r\n          try {\r\n            await videoRef.current.play();\r\n          } catch (error) {\r\n            console.log('Video autoplay prevented:', error);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Initialization error:', error);\r\n      }\r\n    };\r\n\r\n    initializeApp();\r\n\r\n    return () => {\r\n      stopSpeaking();\r\n      stopListening();\r\n    };\r\n  }, []);\r\n\r\n  function handleSpeechResult(text, language) {\r\n    if (text.trim().length > 0) {\r\n      setInputMessage(text);\r\n      // Auto-send the speech result after a short delay\r\n      setTimeout(() => {\r\n        handleSendMessage(null, text);\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  const handleMicClick = () => {\r\n    if (isListening) {\r\n      stopListening();\r\n    } else {\r\n      startListening(selectedLanguage);\r\n    }\r\n  };\r\n\r\n  const handleLanguageSelect = (languageCode) => {\r\n    setSelectedLanguage(languageCode);\r\n    setShowLanguageMenu(false);\r\n    if (isListening) {\r\n      stopListening();\r\n      setTimeout(() => {\r\n        startListening(languageCode);\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  const speakMessage = async (text, messageId = null) => {\r\n    if (!text || isSpeaking) {\r\n      console.log('Cannot speak: no text or already speaking');\r\n      return;\r\n    }\r\n    \r\n    console.log('Attempting to speak message in language:', selectedLanguage);\r\n    console.log('Message content:', text.substring(0, 100) + '...');\r\n\r\n    // Check if speech synthesis is supported\r\n    if (!speechSynthesizer.isSupported()) {\r\n      console.error('Speech synthesis not supported');\r\n      alert('Text-to-speech is not supported in your browser. Please try Chrome or Edge.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setCurrentlySpeakingId(messageId);\r\n      setIsSpeaking(true);\r\n      \r\n      // Ensure speech synthesis is initialized\r\n      if (!speechSynthesizer.isInitialized) {\r\n        await speechSynthesizer.init();\r\n      }\r\n      \r\n      // Clean the text before speaking\r\n      const cleanedText = cleanTextForSpeech(text);\r\n      \r\n      if (!cleanedText || cleanedText.trim().length === 0) {\r\n        console.log('No text to speak after cleaning');\r\n        return;\r\n      }\r\n      \r\n      await speechSynthesizer.speak(cleanedText, selectedLanguage);\r\n      console.log('Speech completed successfully');\r\n      \r\n    } catch (error) {\r\n      console.error('Speech synthesis error:', error);\r\n      \r\n      // Fallback: Try with English if the selected language fails\r\n      if (selectedLanguage !== 'en-US') {\r\n        console.log('Trying fallback to English...');\r\n        try {\r\n          const cleanedText = cleanTextForSpeech(text);\r\n          await speechSynthesizer.speak(cleanedText, 'en-US');\r\n        } catch (fallbackError) {\r\n          console.error('Fallback speech also failed:', fallbackError);\r\n          alert('Unable to read the message aloud. Your browser may not support speech synthesis for this language.');\r\n        }\r\n      } else {\r\n        alert('Unable to read the message aloud. Please check your browser settings.');\r\n      }\r\n    } finally {\r\n      setIsSpeaking(false);\r\n      setCurrentlySpeakingId(null);\r\n    }\r\n  };\r\n\r\n  const stopSpeaking = () => {\r\n    console.log('Stopping speech synthesis');\r\n    speechSynthesizer.stop();\r\n    setIsSpeaking(false);\r\n    setCurrentlySpeakingId(null);\r\n  };\r\n\r\n  const renderSafeContent = (content) => {\r\n    if (typeof content === 'string') return content;\r\n    if (typeof content === 'number') return content.toString();\r\n    if (typeof content === 'object' && content !== null) {\r\n      try {\r\n        return JSON.stringify(content);\r\n      } catch (e) {\r\n        return String(content);\r\n      }\r\n    }\r\n    return String(content);\r\n  };\r\n\r\n  const formatMessageWithLineBreaks = (text) => {\r\n    if (typeof text !== 'string') return text;\r\n    \r\n    const lines = text.split('\\n');\r\n    return lines.map((line, index) => {\r\n      if (line.trim() === '') {\r\n        return <br key={index} />;\r\n      }\r\n      \r\n      const parts = line.split(/\\*\\*(.*?)\\*\\*/g);\r\n      const formattedLine = parts.map((part, i) => {\r\n        if (i % 2 === 1) {\r\n          return <strong key={i}>{part}</strong>;\r\n        }\r\n        return part;\r\n      });\r\n      \r\n      return (\r\n        <React.Fragment key={index}>\r\n          {formattedLine}\r\n          {index < lines.length - 1 && <br />}\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    socketRef.current = io('http://localhost:5000', {\r\n      auth: {\r\n        token: localStorage.getItem('token')\r\n      }\r\n    });\r\n\r\n    socketRef.current.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setConnectionStatus('connected');\r\n    });\r\n\r\n    socketRef.current.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      setConnectionStatus('disconnected');\r\n    });\r\n\r\n    socketRef.current.on('chat_message', (data) => {\r\n      setIsTyping(false);\r\n      const newMessage = {\r\n        id: Date.now(),\r\n        text: renderSafeContent(data.message),\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, newMessage]);\r\n    });\r\n\r\n    socketRef.current.on('bot_typing', () => {\r\n      setIsTyping(true);\r\n    });\r\n\r\n    socketRef.current.on('error', (error) => {\r\n      console.error('Socket error:', error);\r\n      setIsTyping(false);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        text: \"Sorry, I'm having trouble connecting. Please try again.\",\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      }]);\r\n    });\r\n\r\n    // Fetch chat history\r\n    fetchChatHistory();\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n      stopSpeaking();\r\n      stopListening();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const fetchChatHistory = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/chat/history', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const history = await response.json();\r\n        const formattedHistory = history.map(chat => ({\r\n          id: chat.chat_id || Date.now(),\r\n          text: renderSafeContent(chat.query),\r\n          sender: 'user',\r\n          timestamp: new Date(chat.timestamp),\r\n          response: renderSafeContent(chat.response)\r\n        }));\r\n        \r\n        // Add both user queries and bot responses to messages\r\n        const allMessages = [];\r\n        formattedHistory.forEach(chat => {\r\n          allMessages.push({\r\n            id: chat.id + '_user',\r\n            text: chat.text,\r\n            sender: 'user',\r\n            timestamp: chat.timestamp\r\n          });\r\n          allMessages.push({\r\n            id: chat.id + '_bot',\r\n            text: chat.response,\r\n            sender: 'bot',\r\n            timestamp: new Date(chat.timestamp.getTime() + 1000)\r\n          });\r\n        });\r\n        \r\n        setMessages(allMessages.sort((a, b) => a.timestamp - b.timestamp));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching chat history:', error);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleSendMessage = (e, speechText = null) => {\r\n    if (e) e.preventDefault();\r\n    \r\n    const messageText = speechText || inputMessage;\r\n    if (messageText.trim() === '') return;\r\n\r\n    const newMessage = {\r\n      id: Date.now(),\r\n      text: messageText,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, newMessage]);\r\n    setInputMessage('');\r\n    setIsTyping(true);\r\n\r\n    if (socketRef.current) {\r\n      socketRef.current.emit('user_message', {\r\n        message: messageText,\r\n        userId: user?.id,\r\n        language: selectedLanguage\r\n      });\r\n    }\r\n  };\r\n\r\n  const getLanguageName = (code) => {\r\n    const lang = supportedLanguages.find(l => l.code === code);\r\n    return lang ? lang.nativeName : code;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Video Background */}\r\n      <div className=\"video-background\">\r\n        <video\r\n          ref={videoRef}\r\n          className=\"background-video\"\r\n          autoPlay\r\n          muted\r\n          loop\r\n          playsInline\r\n          onLoadedData={() => setIsVideoLoaded(true)}\r\n        >\r\n          <source src=\"/videos/medical-background.mp4\" type=\"video/mp4\" />\r\n          <source src=\"/videos/medical-background.webm\" type=\"video/webm\" />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n        {!isVideoLoaded && (\r\n          <div className=\"video-placeholder\">\r\n            <div className=\"pulse-animation\"></div>\r\n          </div>\r\n        )}\r\n        <div className=\"video-overlay\"></div>\r\n      </div>\r\n\r\n      {/* Header */}\r\n      <header className=\"chat-header\">\r\n        <div className=\"header-left\">\r\n          <div className=\"logo\">\r\n            <div className=\"logo-icon\">\r\n              <div className=\"rotating-plus\">+</div>\r\n            </div>\r\n            <h2>Health Assistant</h2>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"header-center\">\r\n          <div className=\"user-info\">\r\n            <span className=\"welcome-text\">Welcome,</span>\r\n            <span className=\"user-name\">{user?.name || 'User'}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"header-right\">\r\n          <div className=\"connection-status-wrapper\">\r\n            <div className={`status-dot ${connectionStatus}`}></div>\r\n            <span className=\"status-text\">\r\n              {connectionStatus === 'connected' ? 'Connected' : 'Disconnected'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"language-selector\">\r\n            <button \r\n              className=\"language-btn\"\r\n              onClick={() => setShowLanguageMenu(!showLanguageMenu)}\r\n              title=\"Select Language\"\r\n              aria-expanded={showLanguageMenu}\r\n            >\r\n              <span className=\"language-icon\">🌐</span>\r\n              <span className=\"language-text\">{getLanguageName(selectedLanguage)}</span>\r\n              <span className=\"dropdown-arrow\">▼</span>\r\n            </button>\r\n            \r\n            {showLanguageMenu && (\r\n              <div className=\"language-menu\">\r\n                <div className=\"language-menu-header\">\r\n                  <h4>Select Language</h4>\r\n                  <button \r\n                    className=\"close-menu-btn\"\r\n                    onClick={() => setShowLanguageMenu(false)}\r\n                    aria-label=\"Close language menu\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <div className=\"language-options-list\">\r\n                  {supportedLanguages.map((language) => (\r\n                    <button\r\n                      key={language.code}\r\n                      className={`language-option ${selectedLanguage === language.code ? 'selected' : ''}`}\r\n                      onClick={() => handleLanguageSelect(language.code)}\r\n                      aria-selected={selectedLanguage === language.code}\r\n                    >\r\n                      <span className=\"option-flag\">\r\n                        {language.nativeName.includes('हिन्दी') ? '🇮🇳' : \r\n                         language.nativeName.includes('తెలుగు') ? '🇮🇳' : \r\n                         language.nativeName.includes('தமிழ்') ? '🇮🇳' : '🌐'}\r\n                      </span>\r\n                      <span className=\"option-text\">\r\n                        <span className=\"native-name\">{language.nativeName}</span>\r\n                        <span className=\"english-name\">{language.name}</span>\r\n                      </span>\r\n                      {selectedLanguage === language.code && (\r\n                        <span className=\"checkmark\">✓</span>\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Chat Messages */}\r\n      <div className=\"chat-messages\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"empty-chat\">\r\n            <div className=\"empty-icon\">💬</div>\r\n            <h3>Start Your Health Consultation</h3>\r\n            <p>Describe your symptoms or ask any health-related questions</p>\r\n            <div className=\"empty-features\">\r\n              <div className=\"feature\">\r\n                <span className=\"feature-icon\">🎤</span>\r\n                <span>Voice input supported</span>\r\n              </div>\r\n              <div className=\"feature\">\r\n                <span className=\"feature-icon\">🌐</span>\r\n                <span>Multiple languages</span>\r\n              </div>\r\n              <div className=\"feature\">\r\n                <span className=\"feature-icon\">⚕️</span>\r\n                <span>Professional medical advice</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`}\r\n            >\r\n              <div className=\"message-content\">\r\n                <div className=\"message-avatar\">\r\n                  {message.sender === 'user' ? '👤' : '⚕️'}\r\n                </div>\r\n                <div className=\"message-bubble\">\r\n                  <div className=\"message-text\">\r\n                    {formatMessageWithLineBreaks(renderSafeContent(message.text))}\r\n                  </div>\r\n                  <span className=\"message-time\">\r\n                    {new Date(message.timestamp).toLocaleTimeString()}\r\n                  </span>\r\n                  \r\n                  {/* Speaker button for bot messages */}\r\n                  {message.sender === 'bot' && (\r\n                    <button\r\n                      className={`speaker-btn ${currentlySpeakingId === message.id ? 'speaking' : ''}`}\r\n                      onClick={() => {\r\n                        if (currentlySpeakingId === message.id && isSpeaking) {\r\n                          stopSpeaking();\r\n                        } else {\r\n                          speakMessage(message.text, message.id);\r\n                        }\r\n                      }}\r\n                      title={currentlySpeakingId === message.id ? 'Stop reading' : 'Read aloud'}\r\n                      aria-label={currentlySpeakingId === message.id ? 'Stop reading' : 'Read aloud'}\r\n                      disabled={isSpeaking && currentlySpeakingId !== message.id}\r\n                    >\r\n                      {currentlySpeakingId === message.id && isSpeaking ? '🔇' : '🔊'}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        \r\n        {isTyping && (\r\n          <div className=\"message bot-message typing-message\">\r\n            <div className=\"message-content\">\r\n              <div className=\"message-avatar\">⚕️</div>\r\n              <div className=\"message-bubble\">\r\n                <div className=\"typing-indicator\">\r\n                  <span>Dr. CareBot is typing</span>\r\n                  <div className=\"typing-dots\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div className=\"chat-input-container\">\r\n        <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\r\n          <div className=\"input-wrapper\">\r\n            <div className=\"input-field\">\r\n              <input\r\n                type=\"text\"\r\n                value={inputMessage}\r\n                onChange={(e) => setInputMessage(e.target.value)}\r\n                placeholder={`Describe your symptoms or ask a question... (${getLanguageName(selectedLanguage)})`}\r\n                disabled={isTyping}\r\n                className=\"message-input\"\r\n                aria-label=\"Message input\"\r\n              />\r\n              \r\n              <div className=\"input-actions\">\r\n                {browserSupportsSpeechRecognition && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`action-btn mic-btn ${isListening ? 'listening' : ''}`}\r\n                    onClick={handleMicClick}\r\n                    disabled={isTyping}\r\n                    title={isListening ? 'Stop listening' : 'Start voice input'}\r\n                    aria-label={isListening ? 'Stop listening' : 'Start voice input'}\r\n                  >\r\n                    <span className=\"btn-icon\">{isListening ? '⏹️' : '🎤'}</span>\r\n                    <span className=\"btn-tooltip\">\r\n                      {isListening ? 'Stop Listening' : 'Voice Input'}\r\n                    </span>\r\n                  </button>\r\n                )}\r\n                \r\n                {/* Stop speech button */}\r\n                <button\r\n                  type=\"button\"\r\n                  className={`action-btn speaker-btn ${isSpeaking ? 'speaking' : ''}`}\r\n                  onClick={stopSpeaking}\r\n                  disabled={!isSpeaking}\r\n                  title={isSpeaking ? 'Stop all speech' : 'No speech active'}\r\n                  aria-label={isSpeaking ? 'Stop all speech' : 'No speech active'}\r\n                >\r\n                  <span className=\"btn-icon\">🔇</span>\r\n                  <span className=\"btn-tooltip\">\r\n                    {isSpeaking ? 'Stop All Speech' : 'No Speech'}\r\n                  </span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              disabled={isTyping || inputMessage.trim() === ''}\r\n              className=\"send-button\"\r\n              aria-label=\"Send message\"\r\n            >\r\n              <span className=\"send-icon\">➤</span>\r\n              <span className=\"send-text\">Send</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {isListening && (\r\n          <div className=\"speech-indicator\">\r\n            <div className=\"pulse-ring\"></div>\r\n            <div className=\"speech-text\">\r\n              <span className=\"listening-text\">Listening in {getLanguageName(selectedLanguage)}...</span>\r\n              <span className=\"transcript\">{transcript}</span>\r\n            </div>\r\n            <button \r\n              className=\"stop-listening-btn\"\r\n              onClick={stopListening}\r\n              title=\"Stop listening\"\r\n              aria-label=\"Stop listening\"\r\n            >\r\n              ⏹️\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Stop Speech Button - Fixed Position */}\r\n      {isSpeaking && (\r\n        <div className=\"stop-speech-container\">\r\n          <button \r\n            className=\"stop-speech-btn\"\r\n            onClick={stopSpeaking}\r\n            title=\"Stop all speech\"\r\n            aria-label=\"Stop all speech\"\r\n          >\r\n            <span className=\"stop-icon\">⏹️</span>\r\n            <span className=\"stop-text\">Stop All Voice</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Debug Information - Remove in production */}\r\n      {process.env.NODE_ENV === 'development' && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          bottom: '10px',\r\n          left: '10px',\r\n          background: 'rgba(0,0,0,0.8)',\r\n          color: 'white',\r\n          padding: '10px',\r\n          fontSize: '12px',\r\n          zIndex: 10000,\r\n          maxWidth: '300px',\r\n          borderRadius: '5px'\r\n        }}>\r\n          <div><strong>Debug Info:</strong></div>\r\n          <div>Speech Supported: {speechSynthesizer.isSupported() ? 'Yes' : 'No'}</div>\r\n          <div>Speech Initialized: {speechSynthesizer.isInitialized ? 'Yes' : 'No'}</div>\r\n          <div>Currently Speaking: {isSpeaking ? 'Yes' : 'No'}</div>\r\n          <div>Selected Language: {selectedLanguage}</div>\r\n          <div>Available Voices: {speechSynthesizer.getAvailableVoices().length}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}