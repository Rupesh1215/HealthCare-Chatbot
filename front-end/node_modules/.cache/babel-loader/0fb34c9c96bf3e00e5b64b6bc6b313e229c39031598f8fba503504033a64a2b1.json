{"ast":null,"code":"class SpeechSynthesis {\n  constructor() {\n    this.synth = window.speechSynthesis;\n    this.voices = [];\n    this.selectedVoice = null;\n    this.rate = 1.0;\n    this.pitch = 1.0;\n    this.volume = 0.8;\n  }\n  async init() {\n    return new Promise(resolve => {\n      if (this.synth.getVoices().length > 0) {\n        this.voices = this.synth.getVoices();\n        this.selectVoice();\n        resolve();\n      } else {\n        this.synth.onvoiceschanged = () => {\n          this.voices = this.synth.getVoices();\n          this.selectVoice();\n          resolve();\n        };\n      }\n    });\n  }\n  selectVoice(language = 'en-US') {\n    // Prefer Google voices for better quality and accuracy\n    const preferredVoices = this.voices.filter(voice => voice.voiceURI.includes('Google') && voice.lang.includes(language));\n    if (preferredVoices.length > 0) {\n      this.selectedVoice = preferredVoices[0];\n    } else {\n      // Fallback to any voice for the language\n      const languageVoices = this.voices.filter(voice => voice.lang.includes(language));\n      if (languageVoices.length > 0) {\n        this.selectedVoice = languageVoices[0];\n      } else {\n        // If no suitable language voice is found, fallback to English\n        this.selectedVoice = this.voices.find(v => v.lang.includes('en-US')) || null;\n        // Optionally, add logging or UI feedback here\n        if (!this.selectedVoice) {\n          alert('No suitable voice found for selected language. Speech may not work.');\n        }\n      }\n    }\n  }\n  speak(text, language = 'en-US') {\n    if (this.synth.speaking) {\n      this.synth.cancel();\n    }\n    this.selectVoice(language);\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.voice = this.selectedVoice;\n    utterance.rate = this.rate;\n    utterance.pitch = this.pitch;\n    utterance.volume = this.volume;\n    utterance.lang = language;\n    this.synth.speak(utterance);\n    return new Promise(resolve => {\n      utterance.onend = resolve;\n      utterance.onerror = resolve;\n    });\n  }\n  stop() {\n    this.synth.cancel();\n  }\n  isSpeaking() {\n    return this.synth.speaking;\n  }\n  getAvailableLanguages() {\n    const languages = new Set();\n    this.voices.forEach(voice => {\n      const langCode = voice.lang;\n      languages.add(langCode);\n    });\n    return Array.from(languages);\n  }\n}\nexport const speechSynthesizer = new SpeechSynthesis();","map":{"version":3,"names":["SpeechSynthesis","constructor","synth","window","speechSynthesis","voices","selectedVoice","rate","pitch","volume","init","Promise","resolve","getVoices","length","selectVoice","onvoiceschanged","language","preferredVoices","filter","voice","voiceURI","includes","lang","languageVoices","find","v","alert","speak","text","speaking","cancel","utterance","SpeechSynthesisUtterance","onend","onerror","stop","isSpeaking","getAvailableLanguages","languages","Set","forEach","langCode","add","Array","from","speechSynthesizer"],"sources":["C:/Users/mohan/OneDrive/Desktop/Chatbot/front-end/src/utils/speechSynthesis.js"],"sourcesContent":["class SpeechSynthesis {\r\n  constructor() {\r\n    this.synth = window.speechSynthesis;\r\n    this.voices = [];\r\n    this.selectedVoice = null;\r\n    this.rate = 1.0;\r\n    this.pitch = 1.0;\r\n    this.volume = 0.8;\r\n  }\r\n\r\n  async init() {\r\n    return new Promise((resolve) => {\r\n      if (this.synth.getVoices().length > 0) {\r\n        this.voices = this.synth.getVoices();\r\n        this.selectVoice();\r\n        resolve();\r\n      } else {\r\n        this.synth.onvoiceschanged = () => {\r\n          this.voices = this.synth.getVoices();\r\n          this.selectVoice();\r\n          resolve();\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  selectVoice(language = 'en-US') {\r\n    // Prefer Google voices for better quality and accuracy\r\n    const preferredVoices = this.voices.filter(voice => \r\n      voice.voiceURI.includes('Google') && voice.lang.includes(language)\r\n    );\r\n    if (preferredVoices.length > 0) {\r\n      this.selectedVoice = preferredVoices[0];\r\n    } else {\r\n      // Fallback to any voice for the language\r\n      const languageVoices = this.voices.filter(voice => \r\n        voice.lang.includes(language)\r\n      );\r\n      if (languageVoices.length > 0) {\r\n        this.selectedVoice = languageVoices[0];\r\n      } else {\r\n        // If no suitable language voice is found, fallback to English\r\n        this.selectedVoice = this.voices.find(v => v.lang.includes('en-US')) || null;\r\n        // Optionally, add logging or UI feedback here\r\n        if (!this.selectedVoice) {\r\n          alert('No suitable voice found for selected language. Speech may not work.');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  speak(text, language = 'en-US') {\r\n    if (this.synth.speaking) {\r\n      this.synth.cancel();\r\n    }\r\n\r\n    this.selectVoice(language);\r\n\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.voice = this.selectedVoice;\r\n    utterance.rate = this.rate;\r\n    utterance.pitch = this.pitch;\r\n    utterance.volume = this.volume;\r\n    utterance.lang = language;\r\n\r\n    this.synth.speak(utterance);\r\n\r\n    return new Promise((resolve) => {\r\n      utterance.onend = resolve;\r\n      utterance.onerror = resolve;\r\n    });\r\n  }\r\n\r\n  stop() {\r\n    this.synth.cancel();\r\n  }\r\n\r\n  isSpeaking() {\r\n    return this.synth.speaking;\r\n  }\r\n\r\n  getAvailableLanguages() {\r\n    const languages = new Set();\r\n    this.voices.forEach(voice => {\r\n      const langCode = voice.lang;\r\n      languages.add(langCode);\r\n    });\r\n    return Array.from(languages);\r\n  }\r\n}\r\n\r\nexport const speechSynthesizer = new SpeechSynthesis();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}